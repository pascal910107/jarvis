name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install pip-tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools
      
      - name: Update dependencies
        run: |
          # Create requirements.in if it doesn't exist
          if [ ! -f requirements.in ]; then
            cp requirements.txt requirements.in
          fi
          
          # Update all dependencies to latest versions
          pip-compile --upgrade requirements.in
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update Python dependencies'
          body: |
            ## Automated Dependency Update
            
            This PR updates the Python dependencies to their latest versions.
            
            ### Checklist
            - [ ] All tests pass
            - [ ] No breaking changes identified
            - [ ] Security advisories checked
            
            ---
            *This PR was automatically created by the dependency update workflow.*
          branch: update-dependencies
          delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety
      
      - name: Run security audit
        run: |
          safety check --json > security-report.json
      
      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.json
      
      - name: Comment PR with vulnerabilities
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('security-report.json', 'utf8'));
            const vulnerabilities = report.vulnerabilities;
            
            if (vulnerabilities.length > 0) {
              let comment = '## ðŸš¨ Security Vulnerabilities Found\n\n';
              vulnerabilities.forEach(vuln => {
                comment += `- **${vuln.package}**: ${vuln.vulnerability}\n`;
              });
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }